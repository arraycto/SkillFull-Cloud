<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.zxiaozhou.skillfull.auth.modules.rbac.mapper.RbacRoleMapper">

    <resultMap type="indi.zxiaozhou.skillfull.auth.modules.rbac.entity.RbacRoleEntity" id="RbacRoleMap">
        <result property="roleId" column="role_id" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleSysCode" column="role_sys_code" jdbcType="VARCHAR"/>
        <result property="roleCode" column="role_code" jdbcType="VARCHAR"/>
        <result property="parentRoleId" column="parent_role_id" jdbcType="VARCHAR"/>
        <result property="enableDelete" column="enable_delete" jdbcType="INTEGER"/>
        <result property="autoBind" column="auto_bind" jdbcType="INTEGER"/>
        <result property="roleStatus" column="role_status" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="uniqueHelp" column="unique_help" jdbcType="VARCHAR"/>
        <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
        <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
        <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
        <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
        <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
        <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
        <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
        <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!--数据库字段-->
    <sql id="Column_List">
        role_id, role_name, role_sys_code, role_code, parent_role_id, enable_delete, auto_bind, role_status, remark,
        unique_help, create_area_code, create_position_code, create_org_sys_code, create_system_code, create_tenant_id,
        create_user_id, create_user_name, create_time, update_user_id, update_user_name, update_time, del_flag
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.role_id, ali.role_name, ali.role_sys_code, ali.role_code, ali.parent_role_id, ali.enable_delete,
        ali.auto_bind, ali.role_status, ali.remark, ali.unique_help, ali.create_area_code, ali.create_position_code,
        ali.create_org_sys_code, ali.create_system_code, ali.create_tenant_id, ali.create_user_id, ali.create_user_name,
        ali.create_time, ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag
    </sql>

    <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.role_id, ali.role_name, ali.role_sys_code, ali.role_code, ali.parent_role_id, ali.enable_delete,
        ali.auto_bind, ali.role_status, ali.remark, ali.unique_help, ali.create_area_code, ali.create_position_code,
        ali.create_org_sys_code, ali.create_system_code, ali.create_tenant_id, ali.create_user_id, ali.create_user_name,
        ali.create_time, ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag
    </sql>


    <!--通过实体作为筛选条件分页查询-->
    <select id="pageByModel" resultType="indi.zxiaozhou.skillfull.auth.modules.rbac.service.dto.RbacRolePageDto">
        SELECT
        <include refid="Column_List"/>
        FROM auth_rbac_role
        <where>
            del_flag = 0
            <if test="query.keyword != null and query.keyword != ''">
                AND （
                LOCATE(#{query.keyword, jdbcType=VARCHAR}, role_name) &gt; 0
                OR
                LOCATE(#{query.keyword, jdbcType=VARCHAR}, role_code) &gt; 0
                )
            </if>
            <if test="query.roleStatus != null">
                AND role_status = #{query.roleStatus, jdbcType=INTEGER}
            </if>
            <if test="query.startTime != null">
                AND create_time &gt;= #{query.startTime, jdbcType=TIMESTAMP}
            </if>
            <if test="query.endTime != null">
                AND create_time &lt;= #{query.endTime, jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>


    <!-- 通过角色id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM auth_rbac_role
        WHERE role_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE auth_rbac_role
        <set>
            del_flag = 1,
            unique_help = role_id,
        </set>
        WHERE role_id = #{roleId, jdbcType=VARCHAR}
    </update>
</mapper>