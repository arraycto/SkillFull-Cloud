<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.zxiaozhou.skillfull.message.modules.message.mapper.MessageUserRecordMapper">

    <resultMap type="indi.zxiaozhou.skillfull.message.modules.message.entity.MessageUserRecordEntity"
               id="MessageUserRecordMap">
        <result property="msgId" column="msg_id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="msgAbstract" column="msg_abstract" jdbcType="VARCHAR"/>
        <result property="msgContent" column="msg_content" jdbcType="VARCHAR"/>
        <result property="busiState" column="busi_state" jdbcType="INTEGER"/>
        <result property="busiId" column="busi_id" jdbcType="VARCHAR"/>
        <result property="iconType" column="icon_type" jdbcType="INTEGER"/>
        <result property="icon" column="icon" jdbcType="VARCHAR"/>
        <result property="senderUserName" column="sender_user_name" jdbcType="VARCHAR"/>
        <result property="senderUserId" column="sender_user_id" jdbcType="VARCHAR"/>
        <result property="otherInfo" column="other_info" jdbcType="VARCHAR"/>
        <result property="sendTime" column="send_time" jdbcType="TIMESTAMP"/>
        <result property="readStatus" column="read_status" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="msgType" column="msg_type" jdbcType="INTEGER"/>
        <result property="pageUrl" column="page_url" jdbcType="VARCHAR"/>
        <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
        <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
        <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
        <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
        <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
        <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
        <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
        <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!--数据库字段-->
    <sql id="Column_List">
        msg_id, title, msg_abstract, msg_content, busi_state, busi_id, icon_type, icon, sender_user_name,
        sender_user_id, other_info, send_time, read_status, user_id, msg_type, page_url, create_area_code,
        create_position_code, create_org_sys_code, create_system_code, create_user_id, create_tenant_id,
        create_user_name, create_time, update_user_id, update_user_name, update_time, remark, del_flag
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.msg_id, ali.title, ali.msg_abstract, ali.msg_content, ali.busi_state, ali.busi_id, ali.icon_type, ali.icon,
        ali.sender_user_name, ali.sender_user_id, ali.other_info, ali.send_time, ali.read_status, ali.user_id,
        ali.msg_type, ali.page_url, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_user_id, ali.create_tenant_id, ali.create_user_name, ali.create_time,
        ali.update_user_id, ali.update_user_name, ali.update_time, ali.remark, ali.del_flag
    </sql>

    <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.msg_id, ali.title, ali.msg_abstract, ali.msg_content, ali.busi_state, ali.busi_id, ali.icon_type, ali.icon,
        ali.sender_user_name, ali.sender_user_id, ali.other_info, ali.send_time, ali.read_status, ali.user_id,
        ali.msg_type, ali.page_url, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_user_id, ali.create_tenant_id, ali.create_user_name, ali.create_time,
        ali.update_user_id, ali.update_user_name, ali.update_time, ali.remark, ali.del_flag
    </sql>


    <!--通过实体作为筛选条件分页查询-->
    <select id="pageByModel"
            resultType="indi.zxiaozhou.skillfull.message.modules.message.service.dto.MessageUserRecordPageDto">
        SELECT
        <include refid="Column_List_Page_Ali"/>
        FROM msg_message_user_record ali
        <where>
            ali.del_flag = 0
            <if test="query.readStatus != null">
                AND ali.read_status = #{query.readStatus, jdbcType=INTEGER}
            </if>
            <if test="query.userId != null and query.userId != ''">
                AND ali.user_id = #{query.userId, jdbcType=VARCHAR}
            </if>
            <if test="query.msgType != null">
                AND ali.msg_type = #{query.msgType, jdbcType=INTEGER}
            </if>
            <if test="query.startTime != null">
                AND ali.create_time &gt;= #{query.startTime, jdbcType=TIMESTAMP}
            </if>
            <if test="query.endTime != null">
                AND ali.create_time &lt;= #{query.endTime, jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>


    <!-- 通过消息记录id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM msg_message_user_record
        WHERE msg_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过字典id物理批量删除 -->
    <delete id="physicalDeleteBatchIds">
        DELETE
        FROM msg_message_user_record
        WHERE msg_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE msg_message_user_record
        <set>
            del_flag = 1,
        </set>
        WHERE msg_id = #{msgId, jdbcType=VARCHAR}
    </update>


    <!-- 通过id批量逻辑删除 -->
    <update id="deleteBatchIds">
        UPDATE msg_message_user_record
        <set>
            del_flag = 1,
        </set>
        WHERE msg_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>